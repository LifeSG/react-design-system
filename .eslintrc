{
    "env": {
        "es2020": true,
        "node": true,
        "browser": true
    },
    "parser": "@typescript-eslint/parser",
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "prettier",
        "plugin:mdx/recommended"
    ],
    "parserOptions": {
        "ecmaVersion": 11,
        "sourceType": "module",
        "ecmaFeatures": {
            "modules": true,
            "jsx": true
        }
    },
    "plugins": ["eslint-plugin-react", "@typescript-eslint"],
    "settings": {
        "react": {
            "version": "detect"
        },
        "mdx/code-blocks": true
    },
    "rules": {
        "indent": "off", // Need this else it clashes with @typescript-eslint/indent
        "no-empty": "off",
        "no-console": "off",
        "no-debugger": "off",
        "curly": "off",
        "max-len": "off",
        "semi": ["error", "always"],
        "space-before-function-paren": [
            "warn",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "no-trailing-spaces": "off",
        "max-classes-per-file": "off",
        "no-multiple-empty-lines": "off",
        "linebreak-style": ["error", "unix"],
        "sort-imports": [
            "warn",
            {
                "ignoreDeclarationSort": true
            }
        ],
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/member-delimiter-style": [
            "warn",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": ["interface", "class"],
                "format": ["PascalCase"]
            }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "explicit"
            }
        ],
        "react/react-in-jsx-scope": "off"
    }
}
