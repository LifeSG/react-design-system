import { StyledComponentProps } from "../helpers";
import { SemanticColourSet } from "../types";
export declare const getSemanticColour: (key: keyof SemanticColourSet) => (props: StyledComponentProps) => string;
export declare const ColourSemantic: {
    text: (props: StyledComponentProps) => string;
    "text-subtle": (props: StyledComponentProps) => string;
    "text-subtler": (props: StyledComponentProps) => string;
    "text-subtlest": (props: StyledComponentProps) => string;
    "text-primary": (props: StyledComponentProps) => string;
    "text-hover": (props: StyledComponentProps) => string;
    "text-selected": (props: StyledComponentProps) => string;
    "text-selected-hover": (props: StyledComponentProps) => string;
    "text-disabled": (props: StyledComponentProps) => string;
    "text-disabled-subtle": (props: StyledComponentProps) => string;
    "text-disabled-subtlest": (props: StyledComponentProps) => string;
    "text-selected-disabled": (props: StyledComponentProps) => string;
    "text-success": (props: StyledComponentProps) => string;
    "text-warning": (props: StyledComponentProps) => string;
    "text-error": (props: StyledComponentProps) => string;
    "text-info": (props: StyledComponentProps) => string;
    "text-inverse": (props: StyledComponentProps) => string;
    icon: (props: StyledComponentProps) => string;
    "icon-subtle": (props: StyledComponentProps) => string;
    "icon-strongest": (props: StyledComponentProps) => string;
    "icon-primary": (props: StyledComponentProps) => string;
    "icon-primary-subtle": (props: StyledComponentProps) => string;
    "icon-primary-subtlest": (props: StyledComponentProps) => string;
    "icon-hover": (props: StyledComponentProps) => string;
    "icon-selected": (props: StyledComponentProps) => string;
    "icon-selected-hover": (props: StyledComponentProps) => string;
    "icon-disabled": (props: StyledComponentProps) => string;
    "icon-disabled-subtle": (props: StyledComponentProps) => string;
    "icon-selected-disabled": (props: StyledComponentProps) => string;
    "icon-success": (props: StyledComponentProps) => string;
    "icon-warning": (props: StyledComponentProps) => string;
    "icon-error": (props: StyledComponentProps) => string;
    "icon-error-strong": (props: StyledComponentProps) => string;
    "icon-info": (props: StyledComponentProps) => string;
    "icon-inverse": (props: StyledComponentProps) => string;
    "icon-primary-inverse": (props: StyledComponentProps) => string;
    border: (props: StyledComponentProps) => string;
    "border-strong": (props: StyledComponentProps) => string;
    "border-stronger": (props: StyledComponentProps) => string;
    "border-primary": (props: StyledComponentProps) => string;
    "border-primary-subtle": (props: StyledComponentProps) => string;
    "border-hover": (props: StyledComponentProps) => string;
    "border-hover-strong": (props: StyledComponentProps) => string;
    "border-selected": (props: StyledComponentProps) => string;
    "border-selected-subtle": (props: StyledComponentProps) => string;
    "border-selected-subtlest": (props: StyledComponentProps) => string;
    "border-selected-hover": (props: StyledComponentProps) => string;
    "border-focus": (props: StyledComponentProps) => string;
    "border-focus-strong": (props: StyledComponentProps) => string;
    "border-disabled": (props: StyledComponentProps) => string;
    "border-selected-disabled": (props: StyledComponentProps) => string;
    "border-success": (props: StyledComponentProps) => string;
    "border-warning": (props: StyledComponentProps) => string;
    "border-error": (props: StyledComponentProps) => string;
    "border-error-focus": (props: StyledComponentProps) => string;
    "border-error-strong": (props: StyledComponentProps) => string;
    "border-info": (props: StyledComponentProps) => string;
    bg: (props: StyledComponentProps) => string;
    "bg-strong": (props: StyledComponentProps) => string;
    "bg-stronger": (props: StyledComponentProps) => string;
    "bg-strongest": (props: StyledComponentProps) => string;
    "bg-hover": (props: StyledComponentProps) => string;
    "bg-hover-strong": (props: StyledComponentProps) => string;
    "bg-hover-subtle": (props: StyledComponentProps) => string;
    "bg-hover-neutral": (props: StyledComponentProps) => string;
    "bg-selected": (props: StyledComponentProps) => string;
    "bg-selected-hover": (props: StyledComponentProps) => string;
    "bg-selected-strong": (props: StyledComponentProps) => string;
    "bg-selected-strongest": (props: StyledComponentProps) => string;
    "bg-disabled": (props: StyledComponentProps) => string;
    "bg-selected-disabled": (props: StyledComponentProps) => string;
    "bg-success": (props: StyledComponentProps) => string;
    "bg-success-strong": (props: StyledComponentProps) => string;
    "bg-warning": (props: StyledComponentProps) => string;
    "bg-warning-strong": (props: StyledComponentProps) => string;
    "bg-info": (props: StyledComponentProps) => string;
    "bg-info-strong": (props: StyledComponentProps) => string;
    "bg-error": (props: StyledComponentProps) => string;
    "bg-error-strong": (props: StyledComponentProps) => string;
    "bg-error-strong-hover": (props: StyledComponentProps) => string;
    "bg-inverse": (props: StyledComponentProps) => string;
    "bg-inverse-subtle": (props: StyledComponentProps) => string;
    "bg-inverse-subtler": (props: StyledComponentProps) => string;
    "bg-inverse-subtlest": (props: StyledComponentProps) => string;
    "bg-primary": (props: StyledComponentProps) => string;
    "bg-primary-subtle": (props: StyledComponentProps) => string;
    "bg-primary-subtler": (props: StyledComponentProps) => string;
    "bg-primary-subtlest": (props: StyledComponentProps) => string;
    "bg-primary-hover": (props: StyledComponentProps) => string;
    "bg-primary-subtlest-hover": (props: StyledComponentProps) => string;
    "bg-primary-subtlest-selected": (props: StyledComponentProps) => string;
    "bg-available": (props: StyledComponentProps) => string;
    "overlay-strong": (props: StyledComponentProps) => string;
    "overlay-subtle": (props: StyledComponentProps) => string;
    hyperlink: (props: StyledComponentProps) => string;
    "hyperlink-inverse": (props: StyledComponentProps) => string;
    "focus-ring": (props: StyledComponentProps) => string;
    "focus-ring-inverse": (props: StyledComponentProps) => string;
};
