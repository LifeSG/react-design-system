{"version":3,"file":"index.js","sources":["../../src/spec/media-spec.ts","../../src/v2_media/media.ts","../../src/v2_layout/col-div.style.tsx","../../src/v2_layout/col-div.tsx","../../src/v2_layout/container.tsx","../../src/v2_layout/section.tsx","../../src/v2_layout/content.tsx","../../src/v2_layout/index.ts"],"sourcesContent":["import { V2_MediaWidth } from \"../v2_media/types\";\n\nexport const MediaWidths: V2_MediaWidth = {\n    mobileS: 320,\n    mobileM: 375,\n    mobileL: 480,\n    tablet: 1199,\n    desktopM: 1399,\n    desktopL: 1999,\n    desktop4k: 3840,\n};\n","import { MediaWidths as MediaWidthsSpec } from \"../spec/media-spec\";\nimport { V2_MediaType, V2_MediaWidth } from \"./types\";\n\n// =============================================================================\n// HELPER FUNCTION\n// =============================================================================\nconst getMediaQuerySpec = (type: \"max-width\" | \"min-width\") => {\n    return Object.keys(MediaWidthsSpec).reduce((accumulator, key) => {\n        const mediaWidth = MediaWidthsSpec[key as keyof V2_MediaWidth];\n        accumulator[\n            key as keyof V2_MediaType\n        ] = `@media screen and (${type}: ${mediaWidth}px)`;\n\n        return accumulator;\n    }, {} as V2_MediaType);\n};\n\n// =============================================================================\n// EXPORTS\n// =============================================================================\n\n/** @deprecated */\nexport const V2_MediaQuery = {\n    MaxWidth: getMediaQuerySpec(\"max-width\"),\n    MinWidth: getMediaQuerySpec(\"min-width\"),\n};\n\n/** @deprecated */\nexport const V2_MediaWidths = MediaWidthsSpec;\n","import styled, { css } from \"styled-components\";\nimport { V2_MediaQuery } from \"../v2_media/media\";\n\n// =============================================================================\n// STYLE INTERFACES\n// =============================================================================\n\nexport interface StyledDivStyleProps {\n    $desktopStart?: number | undefined;\n    $desktopSpan?: number | undefined;\n    $tabletStart?: number | undefined;\n    $tabletSpan?: number | undefined;\n    $mobileStart?: number | undefined;\n    $mobileSpan?: number | undefined;\n}\n\n// =============================================================================\n// STYLING\n// =============================================================================\n\nexport const StyledDiv = styled.div<StyledDivStyleProps>`\n    position: relative;\n    ${(props) => {\n        const {\n            $desktopStart,\n            $desktopSpan,\n            $tabletStart,\n            $tabletSpan,\n            $mobileStart,\n            $mobileSpan,\n        } = props;\n\n        return css`\n            grid-column: ${$desktopStart || \"auto\"} / span ${$desktopSpan || 1};\n\n            ${V2_MediaQuery.MaxWidth.tablet} {\n                grid-column: ${$tabletStart || \"auto\"} / span\n                    ${$tabletSpan || 1};\n            }\n\n            ${V2_MediaQuery.MaxWidth.mobileL} {\n                grid-column: ${$mobileStart || \"auto\"} / span\n                    ${$mobileSpan || 1};\n            }\n        `;\n    }}\n`;\n","import React from \"react\";\nimport { V2_ColDivProps, V2_DivRef } from \"./types\";\nimport { StyledDiv, StyledDivStyleProps } from \"./col-div.style\";\n\nconst Component = (props: V2_ColDivProps, ref: V2_DivRef): JSX.Element => {\n    const { mobileCols, tabletCols, desktopCols, ...otherProps } = props;\n\n    const getStyleProps = (): StyledDivStyleProps => {\n        const desktopValues = desktopCols || tabletCols || mobileCols;\n        const tabletValues = tabletCols || mobileCols;\n        const mobileValues = mobileCols;\n\n        const desktopStartSpan = extractStartAndSpan(desktopValues);\n        const tabletStartSpan = extractStartAndSpan(tabletValues);\n        const mobileStartSpan = extractStartAndSpan(mobileValues);\n\n        const styles = {\n            $desktopSpan: desktopStartSpan.span,\n            $desktopStart: desktopStartSpan.start,\n            $mobileSpan: mobileStartSpan.span,\n            $mobileStart: mobileStartSpan.start,\n            $tabletSpan: tabletStartSpan.span,\n            $tabletStart: tabletStartSpan.start,\n        };\n\n        return styles;\n    };\n\n    return <StyledDiv ref={ref} {...getStyleProps()} {...otherProps} />;\n};\n\n/** @deprecated */\nexport const V2_ColDiv = React.forwardRef(Component);\n\n// =============================================================================\n// HELPER FUNCTIONS\n// =============================================================================\nconst extractStartAndSpan = (value: number | number[] | undefined) => {\n    if (Array.isArray(value) && value.length > 1) {\n        const [firstVal, secondVal] = value; // Will just take the first 2\n\n        const startVal = firstVal <= secondVal ? firstVal : secondVal;\n        const endVal = firstVal <= secondVal ? secondVal : firstVal;\n\n        let span;\n\n        if (endVal === startVal) {\n            span = 1;\n        } else {\n            span = endVal - startVal;\n        }\n\n        return { start: startVal, span };\n    } else if (typeof value === \"number\") {\n        return { start: undefined, span: value };\n    } else {\n        return { start: undefined, span: undefined };\n    }\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { V2_MediaQuery } from \"../v2_media/media\";\nimport { V2_ContainerProps, V2_ContainerType, V2_DivRef } from \"./types\";\n\nconst Component = (props: V2_ContainerProps, ref: V2_DivRef): JSX.Element => {\n    const {\n        children,\n        \"data-testid\": testId = \"container\",\n        type = \"flex\",\n        stretch = false,\n        ...otherProps\n    } = props;\n\n    return (\n        <StyledContainer\n            ref={ref}\n            data-testid={testId}\n            $type={type}\n            $stretch={stretch}\n            {...otherProps}\n        >\n            {children}\n        </StyledContainer>\n    );\n};\n\n// =============================================================================\n// EXPORT\n// =============================================================================\n/** @deprecated */\nexport const V2_Container = React.forwardRef(Component);\n\n// =============================================================================\n// STYLING\n// =============================================================================\ninterface StyleProps {\n    $type: V2_ContainerType;\n    $stretch: boolean;\n}\n\nconst StyledContainer = styled.div<StyleProps>`\n    flex-grow: 1;\n    margin: 0 auto;\n    position: relative;\n    width: auto;\n    height: auto;\n\n    ${(props) => {\n        if (props.$stretch) {\n            return css`\n                padding: 0 3rem;\n            `;\n        } else {\n            return css`\n                padding: 0 0.75rem;\n                /* Max width restrictions */\n                max-width: 1320px;\n\n                ${V2_MediaQuery.MaxWidth.desktopM} {\n                    max-width: 1140px;\n                }\n            `;\n        }\n    }}\n    ${V2_MediaQuery.MaxWidth.tablet} {\n        max-width: 720px;\n    }\n    ${V2_MediaQuery.MaxWidth.mobileL} {\n        width: 100%;\n        padding: 0;\n        max-width: unset;\n    }\n\n    ${(props) => {\n        switch (props.$type) {\n            case \"grid\":\n                return css`\n                    column-gap: 2rem;\n                    display: grid;\n                    grid-template-columns: repeat(12, minmax(0, 1fr));\n\n                    ${V2_MediaQuery.MaxWidth.tablet} {\n                        column-gap: 1.5rem;\n                        grid-template-columns: repeat(8, minmax(0, 1fr));\n                    }\n\n                    ${V2_MediaQuery.MaxWidth.mobileL} {\n                        column-gap: 1rem;\n                        grid-template-columns: repeat(4, minmax(0, 1fr));\n                    }\n                `;\n            case \"flex-column\":\n                return css`\n                    display: flex;\n                    flex-direction: column;\n                `;\n            case \"flex\":\n            default:\n                return css`\n                    display: flex;\n                `;\n        }\n    }}\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { V2_DivRef, V2_SectionProps } from \"./types\";\nimport { V2_MediaQuery } from \"../v2_media\";\n\nconst Component = (props: V2_SectionProps, ref: V2_DivRef): JSX.Element => {\n    const {\n        children,\n        \"data-testid\": testId = \"section\",\n        stretch = false,\n        ...otherProps\n    } = props;\n\n    return (\n        <StyledSection\n            ref={ref}\n            data-testid={testId}\n            $stretch={stretch}\n            {...otherProps}\n        >\n            {children}\n        </StyledSection>\n    );\n};\n\n// =============================================================================\n// EXPORT\n// =============================================================================\n/** @deprecated */\nexport const V2_Section = React.forwardRef(Component);\n\n// =============================================================================\n// STYLING\n// =============================================================================\ninterface StyleProps {\n    $stretch: boolean;\n}\n\nconst StyledSection = styled.section<StyleProps>`\n    display: block;\n    position: relative;\n    ${(props) => {\n        if (props.$stretch) {\n            return css`\n                ${V2_MediaQuery.MaxWidth.tablet} {\n                    padding: 0 1.5rem;\n\n                    // Extra enforcement\n                    padding-left: 1.5rem !important;\n                    padding-right: 1.5rem !important;\n                }\n            `;\n        } else {\n            return css`\n                padding: 0 1.5rem;\n\n                // Extra enforcement\n                padding-left: 1.5rem !important;\n                padding-right: 1.5rem !important;\n            `;\n        }\n    }}\n`;\n","import React from \"react\";\nimport { V2_Container } from \"./container\";\nimport { V2_Section } from \"./section\";\nimport { V2_ContentProps, V2_DivRef } from \"./types\";\n\nconst Component = (props: V2_ContentProps, ref: V2_DivRef): JSX.Element => {\n    const {\n        children,\n        \"data-testid\": testId = \"content\",\n        className,\n        type = \"flex\",\n        stretch = false,\n        ...otherProps\n    } = props;\n\n    return (\n        <V2_Section\n            ref={ref}\n            data-testid={testId}\n            className={className}\n            stretch={stretch}\n            {...otherProps}\n        >\n            <V2_Container\n                data-testid={`${testId}-container`}\n                type={type}\n                data-id=\"container\"\n                stretch={stretch}\n            >\n                {children}\n            </V2_Container>\n        </V2_Section>\n    );\n};\n\n// =============================================================================\n// EXPORT\n// =============================================================================\n/** @deprecated */\nexport const V2_Content = React.forwardRef(Component);\n","import { V2_ColDiv } from \"./col-div\";\nimport { V2_Container } from \"./container\";\nimport { V2_Content } from \"./content\";\nimport { V2_Section } from \"./section\";\n\n/** @deprecated */\nexport const V2_Layout = {\n    Section: V2_Section,\n    Container: V2_Container,\n    Content: V2_Content,\n    ColDiv: V2_ColDiv,\n};\n\nexport * from \"./types\";\n"],"names":["MediaWidths","mobileS","mobileM","mobileL","tablet","desktopM","desktopL","desktop4k","getMediaQuerySpec","type","Object","keys","MediaWidthsSpec","reduce","accumulator","key","mediaWidth","V2_MediaQuery","StyledDiv","styled","div","props","$desktopStart","$desktopSpan","$tabletStart","$tabletSpan","$mobileStart","$mobileSpan","css","V2_ColDiv","React","forwardRef","ref","mobileCols","tabletCols","desktopCols","otherProps","__rest","_jsx","assign","tabletValues","mobileValues","desktopStartSpan","extractStartAndSpan","tabletStartSpan","mobileStartSpan","span","start","getStyleProps","value","Array","isArray","length","firstVal","secondVal","startVal","endVal","undefined","V2_Container","children","testId","stretch","StyledContainer","$stretch","$type","V2_Section","StyledSection","section","V2_Content","className","V2_Layout","Section","Container","Content","ColDiv"],"mappings":"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"}